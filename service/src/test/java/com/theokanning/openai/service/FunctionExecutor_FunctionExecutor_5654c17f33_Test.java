// ********RoostGPT********
/*
Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4

1. **Scenario**: Validate that the FunctionExecutor constructor correctly sets the functions and ObjectMapper.
   - **Input**: A List of ChatFunction objects and an ObjectMapper object.
   - **Expected Output**: The FunctionExecutor object is created with the provided functions and ObjectMapper set correctly.

2. **Scenario**: Validate that the FunctionExecutor constructor handles null values for the functions parameter.
   - **Input**: A null value for the functions parameter and a valid ObjectMapper object.
   - **Expected Output**: An Exception is thrown or the functions field is set to an empty list.

3. **Scenario**: Validate that the FunctionExecutor constructor handles null values for the ObjectMapper parameter.
   - **Input**: A list of valid ChatFunction objects and a null value for the ObjectMapper parameter.
   - **Expected Output**: An Exception is thrown or a default ObjectMapper is set.

4. **Scenario**: Validate that the FunctionExecutor constructor handles empty lists for the functions parameter.
   - **Input**: An empty list for the functions parameter and a valid ObjectMapper object.
   - **Expected Output**: The FunctionExecutor object is created with an empty list of functions and the provided ObjectMapper.

5. **Scenario**: Validate that the FunctionExecutor constructor handles large numbers of functions.
   - **Input**: A list of a large number of ChatFunction objects and a valid ObjectMapper object.
   - **Expected Output**: The FunctionExecutor object is created and can handle the large number of functions without performance issues.

6. **Scenario**: Validate that the FunctionExecutor constructor handles various types of ChatFunction objects.
   - **Input**: A list containing various types of ChatFunction objects and a valid ObjectMapper object.
   - **Expected Output**: The FunctionExecutor object is created with the provided functions and ObjectMapper, and can handle the various types of ChatFunction objects.

7. **Scenario**: Validate that the FunctionExecutor constructor handles ChatFunction objects with different configurations.
   - **Input**: A list containing ChatFunction objects with different configurations and a valid ObjectMapper object.
   - **Expected Output**: The FunctionExecutor object is created with the provided functions and ObjectMapper, and can handle the ChatFunction objects with different configurations.
*/

// ********RoostGPT********
import org.junit.Before;
import org.junit.Test;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.theokanning.openai.completion.chat.ChatFunction;
import com.theokanning.openai.service.FunctionExecutor;
import java.util.ArrayList;
import java.util.List;
import static org.junit.Assert.*;

public class FunctionExecutor_FunctionExecutor_5654c17f33_Test {
    private List<ChatFunction> functions;
    private ObjectMapper objectMapper;

    @Before
    public void setUp() {
        functions = new ArrayList<>();
        objectMapper = new ObjectMapper();
    }

    @Test
    public void testFunctionExecutorConstructorWithValidParameters() {
        FunctionExecutor functionExecutor = new FunctionExecutor(functions, objectMapper);
        assertNotNull(functionExecutor);
    }

    @Test(expected = NullPointerException.class)
    public void testFunctionExecutorConstructorWithNullFunctions() {
        FunctionExecutor functionExecutor = new FunctionExecutor(null, objectMapper);
    }

    @Test(expected = NullPointerException.class)
    public void testFunctionExecutorConstructorWithNullObjectMapper() {
        FunctionExecutor functionExecutor = new FunctionExecutor(functions, null);
    }

    @Test
    public void testFunctionExecutorConstructorWithEmptyFunctions() {
        functions.clear();
        FunctionExecutor functionExecutor = new FunctionExecutor(functions, objectMapper);
        assertNotNull(functionExecutor);
    }

    @Test
    public void testFunctionExecutorConstructorWithLargeNumberOfFunctions() {
        for(int i=0; i<10000; i++) {
            functions.add(new ChatFunction());
        }
        FunctionExecutor functionExecutor = new FunctionExecutor(functions, objectMapper);
        assertNotNull(functionExecutor);
    }
}
